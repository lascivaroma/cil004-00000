# This is the source file for CHETC conversions of epigraphic markup to XML.

# Replacements are accomplished by means of regular expressions.  Each line is a
# replacement instruction.  Comments are preceded by a '#' character.  Blank lines
# are ignored.  This file can be modified while the CHETC program is running, and
# the program will pick up the modifications.

# Replacements that require the counting of symbols, such as '+' or '-'
# use a notation like '%g1%len2'.  This allows the program to measure the number of
# occurences of the symbol in the second capturing group inside the first capturing group.  In
# regular expressions, capturing groups are delimited by parentheses.


(\[\s*\/)                                                         =   [?] /
# / ]tus                                                          =   / []tus
(\/\s*\])                                                         =   / [?]
\[([\w\(\)\?\!]+) ([\w\(\)\?\!]+)\]                               =   [$1] [$2]
\[([\w\(\)\?\!]+) ([\w\(\)\?\!]+) ([\w\(\)\?\!]+)\]                   =   [$1] [$2] [$3]
([^\s/]+)                                   =   <w n="%mkIDW">$1</w>
\/(?!\w)									=	<lb n="%mkID1"/>


# Single Angle Bracket Enclosures
# Placed first before XML tags are inserted
([^<])<((?:\w|\s)+)>([^>])                  =   $1<supplied reason="omitted">$2</supplied>$3
<((?:\w|\s)+)>$                  			=   <supplied reason="omitted">$1</supplied>
^<((?:\w|\s)+)>                   			=   <supplied reason="omitted">$1</supplied>

# <K=I>alendis                              =   <choice><corr>K</corr><sic>L</sic></choice>alendis
<(\w+)=(\w+)>                               =   <choice><corr>$1</corr><sic>$2</sic></choice>


# Double Character Enclosures
# Double Bracket
\[\[((.)+)\]\]								=	<del rend="erasure">$1</del>

# Double Angle Bracket
<<((.)+)>>									=	<add place="overstrike">$1</add>

# Double Parentheses
\(\(((?:\w|\s)+)\)\)                     	=   <g type="$1"/>


# Single Character Enclosures
# Curly Bracket
\{((?:\w|\s)+)\}                            =    <sic>$1</sic>

# Corner Characters (Unicode Left 231C Right 231D)
⌜((?:\w|\s)+)⌝								=	<choice><sic>$1</sic><corr>$1</corr></choice>


# Single Quotes
'((?:\w|\s)+)'								=	<add>$1</add>

# Brackets
\[-\]										=	<name><gap reason="lost" extent="unknown" unit="character"/></name>
\[\?\]										=	<gap reason="lost" extent="unknown" unit="character"/>
\s*\[-\s(?:[-\s\]]+)\?\]\s*(\n)*          	=   <gap reason="lost" extent="1" unit="line" id="%mkID1"/><certainty target="%mkID1" locus="extent" degree="low"/>
\s*\[-\s(?:[-\s\]]+)\]\s*(\n)*          	=   <gap reason="lost" extent="1" unit="line"/>$1
([^\[]*)\[([-\s\]]+)\]                 		=   $1<gap reason="lost" extent="unknown" unit="character" xml:id="%mkID1"/><certainty target="%mkID1" locus="location" degree="0"/>
\[([\.\s]+)\]                          	  	=	<gap reason="lost" extent="%g1%len1" unit="character"/>
\[c\.((?:\d)+)\]							=	<gap reason="lost" extent="$1" unit="character"/>
\[([^\]]+)\]                          		=   <supplied reason="lost">$1</supplied>
\[([^\n])+\n                          		=   <supplied reason="lost">$1</supplied>


# Parentheses
(\S+)\((-\s*)+\)                        			=   <abbr>$1</abbr>
# Gn(aei!)                                          =   <expan cert="low"><abbr>Gn</abbr><ex>aei</ex></expan>
([A-Za-z0-9]+)?\((\w+)\!\)([A-Za-z0-9]+)?           =   <expan cert="low"><abbr>$1</abbr><ex>$2</ex><abbr>$3</abbr></expan>
([A-Za-z0-9]+)\(([A-Za-z0-9]+)\)([A-Za-z0-9]+)		=   <expan><abbr>$1</abbr><ex>$2</ex><abbr>$3</abbr></expan>
([A-Za-z0-9]+)?\(([A-Za-z0-9]+)\?\)([A-Za-z0-9]+)?  =   <expan><abbr>$1</abbr><ex cert="low">$2</ex><abbr>$3</abbr></expan>
\(([A-Za-z0-9]+)\)([A-Za-z0-9]+)					=   <expan><ex>$1</ex><abbr>$2</abbr></expan>
([A-Za-z0-9]+)\(([A-Za-z0-9]+)\)					=   <expan><abbr>$1</abbr><ex>$2</ex></expan>
<\/expan>\(([A-Za-z0-9]+)\)<expan>					=	<ex>$1</ex>
\(([A-Za-z0-9]+)\)<expan>							=	<expan><ex>$1</ex>
<\/expan>\(([A-Za-z0-9]+)\)							=	<ex>$1</ex></expan>
<\/expan>([A-Za-z0-9]+)\(([A-Za-z0-9]+)\)			=	<abbr>$1</abbr><ex>$2</ex></expan>
<\/ex><\/expan>([A-Za-z0-9]+)						=	</ex><abbr>$1</abbr></expan>
\(((?:(-)|\s)+)\)		                    		=   <gap reason="omitted" extent="unknown" unit="character"/>
\(scil. ((?:\w|\s)+)\)                  			=   <supplied reason="subaudible">$1</supplied>
\(vac.(\?+)\)		                  				=   <space extent="unknown" unit="character"/>
\(vac.((?:\d)+)\)                  					=   <space extent="$1" unit="character"/>
\(([A-Za-z0-9]+)\)([A-Za-z0-9]+)\(([A-Za-z0-9]+)\)	=  <expan><ex>$1</ex><abbr>$2</abbr><ex>$3</ex></expan>
\(((?:\w|\s)+)\)									=   <expan><abbr><am><g type="symbol"/></am></abbr><ex>$1</ex></expan>
\(!\)												=	<note>!</note>
<expan><abbr><expan>								=	<expan>
<\/expan><\/abbr><\/expan>							=	</expan>
</abbr></expan><expan><ex>							=	</abbr><ex>
(\w)\(\)                                            =   <expan><abbr>$1</abbr><ex extent="unknown"></ex></expan>
<abbr><\/abbr>                                      =   null

# Other Markups
# Underdots (Unicode 0323)
((\ẉ)+)										=   <unclear>$1</unclear>

# Plus signs
((\+)+)                                   	=   <gap reason="illegible" extent="%g1%len1" unit="character"/>

# Ellipsis
\.\.\.										=	<gap reason="ellipsis"/>

# Accented Letters (Unicode 0301)
((\ẃ)+)										=	<hi rend="apex">$1</hi>

# Supralinear/Overline Characters (Unicode 0305)
((\w̅)+)										=	<hi rend="supraline">$1</hi>

# Claudian Letters (Unicode TURNED CAPITAL F 2132 | ROMAN NUMERAL REVERSED ONE HUNDRED 2183 | BOX DRAWINGS HEAVY VERTICAL AND RIGHT[Half H] 2523)
([Ⅎ+|Ↄ+|┣+])								=	<g type="claudian_y"/>

#Ligatured Letters (Unicode 0361 - on first letter)
((\w͡\w)+)									=	<hi rend="ligature">$1</hi>

# Dash
-\s(?:[-\s\]]+)\?\s*(\n)*          			=   <gap reason="lost" extent="unknown" unit="line" id="%mkID1"/><certainty target="%mkID1" locus="extent" degree="low"/>
-\s(?:[-\s\]]+)\s*(\n)*          			=   <gap reason="lost" extent="unknown" unit="line" />$1
(\w)(?:-)\n                             	=   $1<lb type="worddiv"/>

# Line Break
\n											=	<lb n="%mkID1"/>

# Text Direction Right to Left (Unicode LEFTWARDS ARROW 2190)
^((←)+)										=	<lb rend="right-to-left"/>
<lb n=\"\d+\"\/>((←)+)						=	<lb rend="right-to-left"/>


#
# post conversion cleanup
#
̣                                       		=   null


^<w n="1">(\w*)\](\w*)<\/w>                 =   <w n="1">$1<gap reason="lost" extent="unknown" unit="line" />$2</w>
\[(\w*)<\/w>$                               =   <gap reason="lost" extent="unknown" unit="line" />$1</w>